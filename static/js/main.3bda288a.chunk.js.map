{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","paginationNumbs","Math","ceil","length","sliseFrom","sliseTo","className","cn","disabled","href","onClick","slice","map","item","active","items","from","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","itemsFrom","itemsTo","min","itemsOf","id","value","onChange","event","selectedValue","target","option","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAkBC,KAAKC,KAAKN,EAAMA,EAAMO,OAAS,GAAKN,GACtDO,GAAaN,EAAc,GAAKD,EAChCQ,EAAUR,EAAUC,EAE1B,OACE,oCACE,qBAAIQ,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBV,IAFd,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAAS,kBAAMX,EAAaD,EAAc,IAL5C,oBAWDF,EAAMe,MAAM,EAAGX,GAAiBY,KAAI,SAAAC,GAAI,OACvC,oBAEEP,UAAWC,IACT,YACA,CAAEO,OAAQD,IAASf,IAJvB,SAOE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMI,GACVH,QAAS,kBAAMX,EAAac,IAJ9B,mBAMMA,MAZDA,MAiBT,oBAAIP,UAAWC,IACb,YACA,CAAEC,SAAUV,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAC/BU,QAAS,kBAAMX,EAAaD,EAAc,IAL5C,uBAYJ,6BACGF,EAAMe,MAAMP,EAAWC,GAASO,KAAI,SAAAC,GAAI,OACvC,oBAAe,UAAQ,OAAvB,wBACWA,IADFA,YCvEnB,IAAME,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IAEfC,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO1B,EAAP,KAAgB2B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOzB,EAAP,KAAoB2B,EAApB,KAGMC,GAAa5B,EAAc,GAAKD,EAAU,EAC1C8B,EAAU1B,KAAK2B,IAAI/B,EAAUC,EAAaiB,EAAMA,EAAMZ,OAAS,IAC/D0B,EAAUd,EAAMA,EAAMZ,OAAS,GASrC,OACE,sBAAKG,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC4B,EADjC,cACgDC,EADhD,eAC8DE,EAD9D,OAIA,sBAAKvB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOlC,EACPmC,SAtBkB,SAACC,GAC3B,IAAMC,EAAgBD,EAAME,OAAOJ,MAEnCN,EAAe,GACfD,GAAYU,IAaN,SAtBQ,CAAC,EAAG,EAAG,GAAI,IA6BRtB,KAAI,SAAAwB,GAAM,OACjB,wBAAqBL,MAAOK,EAA5B,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOmB,EACPlB,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACuC,GAAD,OAAUb,EAAea,UEvD/CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3bda288a.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number[],\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const paginationNumbs = Math.ceil(total[total.length - 1] / perPage);\n  const sliseFrom = (currentPage - 1) * perPage;\n  const sliseTo = perPage * currentPage;\n\n  return (\n    <section>\n      <ul className=\"pagination\">\n        <li className={cn(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => onPageChange(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n\n        {total.slice(0, paginationNumbs).map(item => (\n          <li\n            key={item}\n            className={cn(\n              'page-item',\n              { active: item === currentPage },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${item}`}\n              onClick={() => onPageChange(item)}\n            >\n              {`${item}`}\n            </a>\n          </li>\n        ))}\n\n        <li className={cn(\n          'page-item',\n          { disabled: currentPage === paginationNumbs },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === paginationNumbs}\n            onClick={() => onPageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {total.slice(sliseFrom, sliseTo).map(item => (\n          <li key={item} data-cy=\"item\">\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const options = [3, 5, 10, 20];\n  const itemsFrom = (currentPage - 1) * perPage + 1;\n  const itemsTo = Math.min(perPage * currentPage, items[items.length - 1]);\n  const itemsOf = items[items.length - 1];\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedValue = event.target.value;\n\n    setCurrentPage(1);\n    setPerPage(+selectedValue);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsFrom} - ${itemsTo} of ${itemsOf})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            {options.map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}